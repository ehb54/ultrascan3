// ---------------------------------------------------------------------------------------------
// --------------- WARNING: this code is generated by an automatic code generator --------------
// ---------------------------------------------------------------------------------------------
// -------------- WARNING: any modifications made to this code will be overwritten -------------
// ---------------------------------------------------------------------------------------------

#ifndef US_HYDRODYN_CLUSTER_BFNB_H
#define US_HYDRODYN_CLUSTER_BFNB_H

#include "us_hydrodyn_cluster.h"
#include "qlabel.h"
#include "qstring.h"
#include "qlayout.h"
//Added by qt3to4:
#include <QCloseEvent>
#include "us_mqt.h"
#include "qlineedit.h"
#include "qfontmetrics.h"
#include "qcheckbox.h"
#include "qpushbutton.h"
#include "q3filedialog.h"
#include "qmessagebox.h"
#include "qregexp.h"
#include "us_json.h"
#include "us_hydrodyn.h"

using namespace std;

class US_EXTERN US_Hydrodyn_Cluster_Bfnb : public QDialog
{
   Q_OBJECT

   public:
      US_Hydrodyn_Cluster_Bfnb(
                               void                     *              us_hydrodyn,
                               map < QString, QString > *              parameters,
                               QWidget *                               p = 0,
                               const char *                            name = 0
                               );

      ~US_Hydrodyn_Cluster_Bfnb();

   private:

      US_Config *                             USglobal;

      QLabel *                                lbl_title;
      QLabel *                                lbl_credits_1;
      QLabel *                                lbl_main_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( disable: 4251 )
#endif
      vector < QWidget * >                    widgets_main_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( default: 4251 )
#endif
      void                                    hide_widgets( vector < QWidget * >, bool do_hide = true, bool do_resize = true );
      QLabel *                                lbl_pmtypes;
      QLineEdit *                             le_pmtypes;
      QCheckBox *                             cb_pmincrementally;
      QCheckBox *                             cb_pmallcombinations;
      QLabel *                                lbl_pmrayleighdrho;
      QLineEdit *                             le_pmrayleighdrho;
      QLabel *                                lbl_pmbufferedensity;
      QLineEdit *                             le_pmbufferedensity;
      QLabel *                                lbl_pmoutname;
      QLineEdit *                             le_pmoutname;
      QLabel *                                lbl_pmgridsize;
      QLineEdit *                             le_pmgridsize;
      QCheckBox *                             cb_pmapproxmaxdimension;
      QLabel *                                lbl_q_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( disable: 4251 )
#endif
      vector < QWidget * >                    widgets_q_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( default: 4251 )
#endif
      QLabel *                                lbl_pmminq;
      QLineEdit *                             le_pmminq;
      QLabel *                                lbl_pmmaxq;
      QLineEdit *                             le_pmmaxq;
      QCheckBox *                             cb_pmlogqbin;
      QLabel *                                lbl_pmqpoints;
      QLineEdit *                             le_pmqpoints;
      QLabel *                                lbl_supp_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( disable: 4251 )
#endif
      vector < QWidget * >                    widgets_supp_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( default: 4251 )
#endif
      QLabel *                                lbl_pmharmonics;
      QLineEdit *                             le_pmharmonics;
      QLabel *                                lbl_pmseed;
      QLineEdit *                             le_pmseed;
      QLabel *                                lbl_pmmemory;
      QLineEdit *                             le_pmmemory;
      QLabel *                                lbl_pmbestfinestconversion;
      QLineEdit *                             le_pmbestfinestconversion;
      QLabel *                                lbl_pmbestcoarseconversion;
      QLineEdit *                             le_pmbestcoarseconversion;
      QLabel *                                lbl_pmbestconversiondivisor;
      QLineEdit *                             le_pmbestconversiondivisor;
      QLabel *                                lbl_pmbestrefinementrangepct;
      QLineEdit *                             le_pmbestrefinementrangepct;
      QLabel *                                lbl_pmmaxdimension;
      QLineEdit *                             le_pmmaxdimension;
      QLabel *                                lbl_ga_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( disable: 4251 )
#endif
      vector < QWidget * >                    widgets_ga_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( default: 4251 )
#endif
      QLabel *                                lbl_pmgapopulation;
      QLineEdit *                             le_pmgapopulation;
      QLabel *                                lbl_pmgagenerations;
      QLineEdit *                             le_pmgagenerations;
      QLabel *                                lbl_pmgamutate;
      QLineEdit *                             le_pmgamutate;
      QLabel *                                lbl_pmgasamutate;
      QLineEdit *                             le_pmgasamutate;
      QLabel *                                lbl_pmgacrossover;
      QLineEdit *                             le_pmgacrossover;
      QLabel *                                lbl_pmgaelitism;
      QLineEdit *                             le_pmgaelitism;
      QLabel *                                lbl_pmgaearlytermination;
      QLineEdit *                             le_pmgaearlytermination;
      QLabel *                                lbl_pmgapointsmax;
      QLineEdit *                             le_pmgapointsmax;
      QLabel *                                lbl_misc_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( disable: 4251 )
#endif
      vector < QWidget * >                    widgets_misc_label;
#if defined( WIN32 ) && !defined( QT4 )
  #pragma warning ( default: 4251 )
#endif
      QLabel *                                lbl_pmbestdeltastart;
      QLineEdit *                             le_pmbestdeltastart;
      QLabel *                                lbl_pmbestdeltadivisor;
      QLineEdit *                             le_pmbestdeltadivisor;
      QLabel *                                lbl_pmbestdeltamin;
      QLineEdit *                             le_pmbestdeltamin;
      QCheckBox *                             cb_pmcsv;
      QLabel *                                lbl_pmdebug;
      QLineEdit *                             le_pmdebug;
      QPushButton *                           pb_save;
      QPushButton *                           pb_load;

      QPushButton *                           pb_help;
      QPushButton *                           pb_close;
      void                     *              us_hydrodyn;
      map < QString, QString > *              parameters;
      void                                    update_fields();


      void                                    setupGUI();

   private slots:

      void                                    hide_main_label();
      void                                    update_pmtypes( const QString & );
      void                                    set_pmincrementally();
      void                                    set_pmallcombinations();
      void                                    update_pmrayleighdrho( const QString & );
      void                                    update_pmbufferedensity( const QString & );
      void                                    update_pmoutname( const QString & );
      void                                    update_pmgridsize( const QString & );
      void                                    set_pmapproxmaxdimension();
      void                                    hide_q_label();
      void                                    update_pmminq( const QString & );
      void                                    update_pmmaxq( const QString & );
      void                                    set_pmlogqbin();
      void                                    update_pmqpoints( const QString & );
      void                                    hide_supp_label();
      void                                    update_pmharmonics( const QString & );
      void                                    update_pmseed( const QString & );
      void                                    update_pmmemory( const QString & );
      void                                    update_pmbestfinestconversion( const QString & );
      void                                    update_pmbestcoarseconversion( const QString & );
      void                                    update_pmbestconversiondivisor( const QString & );
      void                                    update_pmbestrefinementrangepct( const QString & );
      void                                    update_pmmaxdimension( const QString & );
      void                                    hide_ga_label();
      void                                    update_pmgapopulation( const QString & );
      void                                    update_pmgagenerations( const QString & );
      void                                    update_pmgamutate( const QString & );
      void                                    update_pmgasamutate( const QString & );
      void                                    update_pmgacrossover( const QString & );
      void                                    update_pmgaelitism( const QString & );
      void                                    update_pmgaearlytermination( const QString & );
      void                                    update_pmgapointsmax( const QString & );
      void                                    hide_misc_label();
      void                                    update_pmbestdeltastart( const QString & );
      void                                    update_pmbestdeltadivisor( const QString & );
      void                                    update_pmbestdeltamin( const QString & );
      void                                    set_pmcsv();
      void                                    update_pmdebug( const QString & );
      void                                    save();
      void                                    load();

      void                                    help();
      void                                    cancel();

   protected slots:

      void                                    closeEvent( QCloseEvent * );
};

#endif
